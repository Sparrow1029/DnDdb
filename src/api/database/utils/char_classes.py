from collections import namedtuple

SavingThrows = namedtuple('SavingThrows', [
    'aimed_magic_items', 'breath_weapons', 'death_paralysis_poison', 'petrifaction_polymorph',
    'unlisted_spells'
])
LvlAdvancement = namedtuple('LvlAdvancement', 'exp hit_dice notes')


class Job:
    def __init__(self):
        self.saves_to_dict()
        self.lvl_adv_to_dict()

    def saves_to_dict(self):
        for lvl in self.saving_throws:
            save_list = self.saving_throws[lvl]
            self.saving_throws[lvl] = SavingThrows(*save_list)._asdict()

    def lvl_adv_to_dict(self):
        for lvl in self.lvl_advancement:
            lvl_list = self.lvl_advancement[lvl]
            self.lvl_advancement[lvl] = LvlAdvancement(*lvl_list)._asdict()

    def __iter__(self):
        """Allows conversion of Job to dict via fn call `dict(<Job child class>)`"""

        for attr in [
            "hit_die", "alignment", "exp_bonus", "armor", "weapons", "proficiencies",
            "saving_throws", "lvl_advancement", "ac_to_hit"
        ]:
            yield attr, getattr(self, attr)


class Assassin(Job):

    hit_die = "d6"
    alignment = ["l_evil", "n_evil", "c_evil"]
    exp_bonus = None
    armor = ["leather", "studded", "shield"]
    weapons = []
    proficiencies = "3 +1 every 4 levels"
    saving_throws = {
        1: [14, 16, 13, 12, 15],
        2: [14, 16, 13, 12, 15],
        3: [14, 16, 13, 12, 15],
        4: [14, 16, 13, 12, 15],
        5: [12, 15, 12, 11, 13],
        6: [12, 15, 12, 11, 13],
        7: [12, 15, 12, 11, 13],
        8: [12, 15, 12, 11, 13],
        9: [10, 14, 11, 10, 11],
        10: [10, 14, 11, 10, 11],
        11: [10, 14, 11, 10, 11],
        12: [10, 14, 11, 10, 11],
        13: [8, 13, 10, 9, 9],
        14: [8, 13, 10, 9, 9],
        15: [8, 13, 10, 9, 9],
    }
    lvl_advancement = {
        1: [0, 1,""],
        2: [1_600, 2,""],
        3: [3_000, 3,""],
        4: [5_750, 4, "The assassin may recruit assassins as henchmen"],
        5: [12_250, 5,""],
        6: [24_750, 6,""],
        7: [50_000, 7,""],
        8: [99_000, 8, "The assassin may recruit thieves as henchmen"],
        9: [200_500, 9, "Master Assassin"],
        10: [300_000, 10,""],
        11: [400_000, 11,""],
        12: [600_000, 12, "The assassin may recruit henchmen of any class"],
        13: [750_000, 13,""],
        14: [1_000_000, 14, "Guildmaster"],
        15: [1_500_000, 15, "Grandmaster Assassin"],
    }
    ac_to_hit = {
        1: { -10: 26, -9: 25, -8: 24, -7: 23, -6: 22, -5: 21, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 20, 1: 20, 2: 19, 3: 18, 4: 17, 5: 16, 6: 15, 7: 14, 8: 13, 9: 12, 10: 11},
        2: { -10: 26, -9: 25, -8: 24, -7: 23, -6: 22, -5: 21, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 20, 1: 20, 2: 19, 3: 18, 4: 17, 5: 16, 6: 15, 7: 14, 8: 13, 9: 12, 10: 11},
        3: { -10: 26, -9: 25, -8: 24, -7: 23, -6: 22, -5: 21, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 20, 1: 20, 2: 19, 3: 18, 4: 17, 5: 16, 6: 15, 7: 14, 8: 13, 9: 12, 10: 11},
        4: { -10: 26, -9: 25, -8: 24, -7: 23, -6: 22, -5: 21, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 20, 1: 20, 2: 19, 3: 18, 4: 17, 5: 16, 6: 15, 7: 14, 8: 13, 9: 12, 10: 11},
        5: {-10: 24, -9: 23, -8: 22, -7: 21, -6: 20, -5: 20, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 19, 1: 18, 2: 17, 3: 16, 4: 15, 5: 14, 6: 13, 7: 12, 8: 11, 9: 10, 10: 9},
        6: {-10: 24, -9: 23, -8: 22, -7: 21, -6: 20, -5: 20, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 19, 1: 18, 2: 17, 3: 16, 4: 15, 5: 14, 6: 13, 7: 12, 8: 11, 9: 10, 10: 9},
        7: {-10: 24, -9: 23, -8: 22, -7: 21, -6: 20, -5: 20, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 19, 1: 18, 2: 17, 3: 16, 4: 15, 5: 14, 6: 13, 7: 12, 8: 11, 9: 10, 10: 9},
        8: {-10: 24, -9: 23, -8: 22, -7: 21, -6: 20, -5: 20, -4: 20, -3: 20, -2: 20, -1: 20,
            0: 19, 1: 18, 2: 17, 3: 16, 4: 15, 5: 14, 6: 13, 7: 12, 8: 11, 9: 10, 10: 9},
        9: {-10: 21, -9: 20, -8: 20, -7: 20, -6: 20, -5: 20, -4: 20, -3: 19, -2: 18, -1: 17,
            0: 16, 1: 15, 2: 14, 3: 13, 4: 12, 5: 11, 6: 10, 7: 9, 8: 8, 9: 7, 10: 6,},
        10: {-10: 21, -9: 20, -8: 20, -7: 20, -6: 20, -5: 20, -4: 20, -3: 19, -2: 18, -1: 17,
             0: 16, 1: 15, 2: 14, 3: 13, 4: 12, 5: 11, 6: 10, 7: 9, 8: 8, 9: 7, 10: 6,},
        11: {-10: 21, -9: 20, -8: 20, -7: 20, -6: 20, -5: 20, -4: 20, -3: 19, -2: 18, -1: 17,
             0: 16, 1: 15, 2: 14, 3: 13, 4: 12, 5: 11, 6: 10, 7: 9, 8: 8, 9: 7, 10: 6,},
        12: {-10: 21, -9: 20, -8: 20, -7: 20, -6: 20, -5: 20, -4: 20, -3: 19, -2: 18, -1: 17,
             0: 16, 1: 15, 2: 14, 3: 13, 4: 12, 5: 11, 6: 10, 7: 9, 8: 8, 9: 7, 10: 6,},
        13: {-10: 20, -9: 20, -8: 20, -7: 20, -6: 20, -5: 19, -4: 18, -3: 17, -2: 16, -1: 15,
             0: 14, 1: 13, 2: 12, 3: 11, 4: 10, 5: 9, 6: 8, 7: 7, 8: 6, 9: 5, 10: 4},
        14: {-10: 20, -9: 20, -8: 20, -7: 20, -6: 20, -5: 19, -4: 18, -3: 17, -2: 16, -1: 15,
             0: 14, 1: 13, 2: 12, 3: 11, 4: 10, 5: 9, 6: 8, 7: 7, 8: 6, 9: 5, 10: 4},
        15: {-10: 20, -9: 20, -8: 20, -7: 20, -6: 20, -5: 19, -4: 18, -3: 17, -2: 16, -1: 15,
             0: 14, 1: 13, 2: 12, 3: 11, 4: 10, 5: 9, 6: 8, 7: 7, 8: 6, 9: 5, 10: 4}
    }


